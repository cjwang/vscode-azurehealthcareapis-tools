steps:

- task: NodeTool@0
  inputs:
    versionSpec: '10.x'
  displayName: 'Install node.js'

- bash: |
    echo ">>> Installing dependencies:"
    npm install typescript && npm install vsce && npm run postinstall
  displayName: 'Install dependencies'
  workingDirectory: '$(basicPath)'

- task: DownloadPackage@1
  displayName: Download FhirConverter tool
  inputs:
    packageType: 'nuget'
    feed: '3ec5df0c-1a0f-4dd5-92db-9a0b3fe70714/5236fe62-97b1-415e-9493-bc8689f538d3'
    view: 'bc74ab73-12fe-436f-acab-b9b1975d94b1'
    definition: '81504d36-f00a-44b5-9e3f-99a013a5d2ff'
    version: 'latest'
    downloadPath: '$(basicPath)/client/engine-temp'

- bash: |
    echo ">>> Moving files:"
    if [ ! -d "engine" ]; then
      mkdir engine
    else
      rm -r engine/*
    fi
    mv engine-temp/contentFiles/any/netcoreapp**/Microsoft.Health.Fhir.Liquid.Converter.Tool/* engine/
    rm -r engine-temp
  workingDirectory: '$(basicPath)/client'
  displayName: 'Move files'

- bash: |
    echo ">>> Testing project:"
    npm run test
  workingDirectory: '$(basicPath)'
  displayName: 'Run tests'
  condition: and(succeeded(), eq(variables['Agent.OS'], 'Windows_NT'))

- bash: |
    echo ">>> Packaging project:"
    npm run package
    PACKAGE_NAME=$(node -p "require('./package.json').name")
    PACKAGE_VERSION=$(node -p "require('./package.json').version")
    echo "##vso[task.setvariable variable=packageName]$PACKAGE_NAME"
    echo "##vso[task.setvariable variable=packageVersion]$PACKAGE_VERSION"
  workingDirectory: '$(basicPath)'
  displayName: 'Package project'

- task: PublishPipelineArtifact@1
  inputs:
    targetPath: '$(basicPath)/$(packageName)-$(packageVersion).vsix'
    artifactName: 'Artifact@$(imageName)'
  displayName: 'Publish pipeline artifact'
